% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transform_model.R
\name{transform_model}
\alias{transform_model}
\title{Transform a DataFrame Using ECDF or Best-Fit Distributions}
\usage{
transform_model(df, metadata)
}
\arguments{
\item{df}{A dataframe containing the data to be transformed.}

\item{metadata}{A dataframe containing column metadata, including:
\itemize{
\item \code{col_names}: Names of the columns to transform.
\item \code{col_type}: Type of each column ("numeric" or "factor").
}}
}
\value{
A named list of transformations for each column. Each entry contains:
\itemize{
\item \code{method}: Chosen transformation method ("beta", "normal", "gamma", "ecdf", or "ecdf_category").
\item \code{params}: Parameters of the selected distribution (for inverse transformation).
\item \code{transformed}: The transformed data in \link{0,1} scale.
\item \code{aic}: Akaike Information Criterion (for parametric fits, NA for ECDF).
\item \code{ks}: Kolmogorov-Smirnov statistic measuring the uniformity of the transformation.
}
}
\description{
This function transforms each numeric column in a dataframe using the best-fit
parametric distribution (Beta, Normal, Gamma) or ECDF if no parametric model fits well.
Categorical columns are transformed using a custom ECDF function.
}
\examples{
df <- data.frame(A = rnorm(100), B = rgamma(100, shape = 2))
metadata <- data.frame(col_names = c("A", "B"), col_type = c("numeric", "numeric"))
transformed_data <- transform_model(df, metadata)
print(transformed_data$A$method)  # Output: "normal", "gamma", "beta", or "ecdf"
}
