% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_syn_chol.R
\name{generate_syn_chol}
\alias{generate_syn_chol}
\title{generate_syn_chol Function: Generates synthetic data based on Cholesky decomposition}
\usage{
generate_syn_chol(data_model, n_samples = NA)
}
\arguments{
\item{data_model}{A list containing the original dataset (\code{original}), transformed uniform dataset (\code{data_uniform}), and metadata (\code{metadata}).
The metadata should include column names (\code{col_names}) and types (\code{col_type}), where categorical columns are identified as \code{factor}.}

\item{n_samples}{The number of synthetic samples to generate. If not provided, the function defaults to the number of rows in the original dataset.}
}
\value{
A data frame containing synthetic data with the same structure as the input dataset. The data will have the same column names as the original dataset,
and the correlation structure will match the original dataset's correlation structure.
}
\description{
This function generates synthetic data by using Cholesky decomposition based on the correlation structure of the input dataset.
The process involves transforming uniform data to normal scores, applying Cholesky decomposition to the correlation matrix,
and generating synthetic data while ensuring that categorical columns maintain their properties.
}
\details{
\itemize{
\item The function transforms the uniform data to normal scores using the inverse CDF (quantile function).
\item A correlation matrix is computed based on the z-scores, and Cholesky decomposition is applied to generate correlated random noise.
\item The standard deviations of categorical columns are set to 1, and their means are set to 0 to maintain their standard normal distribution.
\item The synthetic data is then transformed back into the uniform space using the normal CDF and returned.
}
}
\examples{
# Assuming data_model is a list containing the original dataset and metadata
}
\seealso{
\code{\link{create_model}}
synthetic_data <- generate_syn_chol(data_model, n_samples = 1000)
}
